# Default values for fid.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1
image:
  repository: radiantone/fid
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
fid:
  ## FID root user name
  ## Default values cn=Directory Manager
  rootUser: "cn=Directory Manager"
  ## Password for FID root user
  ##
  rootPassword: "Welcome1234"
  ## License for FID
  ##
  license: "[FID Cluster License]"
  ## Detach from cluster on termination
  ##
  detach: false
  ## Deploy a readonly sts, that joins an existing FID cluster
  ##
  readonly: false
  migration:
  ## Migration file that will be imported during first install (export.zip)
  # url: https://raw.githubusercontent.com/radiantlogic-devops/docker-compose/master/05-monitoring-stack/configs/fid/export.zip
    url:
  ## Post migration script to be run after install (configure_fid.sh)
    script:
  # Mount the secrets by default instead of passing them as env variables. Works on for fid image 8.0.0 or higher
  # Mount secrets should be set to "false" in versions lower than "8.x.x"
  mountSecrets: true
  # Set sealedSecrets id using sealedSecrets
  sealedSecrets: false
  ## Deploy a readonly/follower-only sts, that joins current FID cluster
  ##
  followerOnly:
    enabled: false
    # Enable this with caution
    autoscaling:
      enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
    ## Detach from cluster on termination
    detach: true
  livenessProbe:
    initialDelaySeconds: 60
    timeoutSeconds: 5
  readinessProbe:
    initialDelaySeconds: 120
    timeoutSeconds: 5
# zookeeper configuration
# zookeeper is set to external by default
zk:
  external: true
  connectionString: "zookeeper-app:2181"
  clusterName: "fid-cluster"
  ruok: "http://zookeeper-app:8080/commands/ruok"
  userName: "admin"
  password: "secret1234"
sysctl:
  enabled: false
imagePullSecrets: []
# imagePullSecrets:
# - name: regcred
nameOverride: ""
fullnameOverride: ""
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
updateStrategy: RollingUpdate
podAnnotations: {}
# Pod level security context
podSecurityContext:
  fsGroup: 1000
# Container level security context
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
# Service type to expose Control Panel service
service:
  type: ClusterIP
  port: 7070
ingress:
  enabled: false
  annotations: {}
  # annotations:
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - "/"
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
# resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
# resources:
#  limits:
#    cpu: 4
#    memory: 8Gi
#  requests:
#    cpu: 2
#    memory: 2Gi
resources:
  limits:
    cpu: 1
    memory: 2Gi
  requests:
    cpu: 500m
    memory: 1Gi
# Do not enable this
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80
# nodeSelector is the simplest recommended form of node selection constraint.
nodeSelector: {}
# Tolerations allow the scheduler to schedule pods with matching taints.
tolerations: []
# Node affinity is conceptually similar to nodeSelector, allowing you to constrain which nodes your Pod can be scheduled on based on node labels.
affinity: {}
## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  enabled: false
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, azure-disk on
  ##   Azure, standard on GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  storageClass: "default"
  accessModes:
  - ReadWriteOnce
  size: 10Gi
  annotations: {}

## Metrics and Logging for VDS
# Persisitence need to be enabled to enabled both logging or metrics
# Fluentd needs to be set to true to enable logging
# For splunk, to provide source, sourcetype, input them under aggregators.
# For splunk, to provide, custom source, sourcetype, index, use individual logs (splunk_index,splunk_source, splunk_sourcetype)
# Aggregators, Logs and key:value pairs for logs and aggregators can be added dynamically
# custom_index can be provided for each log individually and it takes precedence
metrics:
  enabled: false
  image: radiantone/fid-exporter
  imageTag: latest
  securityContext:
    runAsUser: 0
  annotations: {}
  pushMode: true
  pushGateway: http://prometheus-server:9091
  pushMetricCron: "* * * * *"
  fluentd:
    enabled: false
    logs:
      vds_server:
        enabled: true
        path: "/opt/radiantone/vds/vds_server/logs/vds_server.log"
        index: vds_server.log
        # custom_index: vds_server_testing.log
        # splunk_index: vds_server_splunk_testing.log
        # splunk_source: testingsource
        # splunk_sourcetype: testingsourcetype
      vds_server_access:
        enabled: true
        path: "/opt/radiantone/vds/vds_server/logs/vds_server_access.csv"
        index: vds_server_access.log
        # custom_index:
        # splunk_index:
        # splunk_source:
        # splunk_sourcetype:
        parse: |-
          <parse>
            @type tsv
            keys LOGID,LOGDATE,LOGTIME,LOGTYPE,SERVERID,SERVERPORT,SESSIONID,MSGID,CLIENTIP,BINDDN,BINDUSER,CONNNB,OPNB,OPCODE,OPNAME,BASEDN,ATTRIBUTES,SCOPE,FILTER,SIZELIMIT,TIMELIMIT,LDAPCONTROLS,CHANGES,RESULTCODE,ERRORMESSAGE,MATCHEDDN,NBENTRIES,ETIME
            types LOGID:integer,LOGDATE:string,LOGTIME:string,LOGTYPE:integer,SERVERID:string,SERVERPORT:integer,SESSIONID:integer,MSGID:integer,CLIENTIP:string,BINDDN:string,BINDUSER:string,CONNNB:integer,OPNB:integer,OPCODE:integer,OPNAME:string,BASEDN:string,ATTRIBUTES:string,SCOPE:string,FILTER:string,SIZELIMIT:integer,TIMELIMIT:integer,LDAPCONTROLS:string,CHANGES:string,RESULTCODE:integer,ERRORMESSAGE:string,MATCHEDDN:string,NBENTRIES:integer,ETIME:integer
          </parse>
      vds_events:
        enabled: true
        path: "/opt/radiantone/vds/vds_server/logs/vds_events.log"
        index: vds_events.log
        # custom_index:
        # splunk_index:
        # splunk_source:
        # splunk_sourcetype:
      periodiccache:
        enabled: true
        path: "/opt/radiantone/vds/vds_server/logs/periodiccache.log"
        index: periodiccache.log
        # custom_index:
        # splunk_index:
        # splunk_source
        # splunk_sourcetype
      web:
        enabled: true
        path: "/opt/radiantone/vds/vds_server/logs/jetty//web.log"
        index: web.log
        # custom_index:
        # splunk_index:
        # splunk_source
        # splunk_sourcetype
      web_access:
        enabled: true
        path: "/opt/radiantone/vds/vds_server/logs/jetty/web_access.log"
        index: web_access.log
        # custom_index:
        # splunk_index:
        # splunk_source
        # splunk_sourcetype
      sync_engine:
        enabled: true
        path: "/opt/radiantone/vds/vds_server/logs/sync_engine.log"
        index: sync_engine.log
        # custom_index:
        # splunk_index:
        # splunk_source
        # splunk_sourcetype
      alerts:
        enabled: true
        path: "/opt/radiantone/vds/vds_server/logs/alerts.log"
        index: alerts.log
        # custom_index:
        # splunk_index:
        # splunk_source
        # splunk_sourcetype
      adap_access:
        enabled: true
        path: "/opt/radiantone/vds/vds_server/logs/adap_access.log"
        index: adap_access.log
        # custom_index:
        # splunk_index:
        # splunk_source
        # splunk_sourcetype
      admin_rest_api_access:
        enabled: true
        path: "/opt/radiantone/vds/vds_server/logs/admin_rest_api_access.log"
        index: admin_rest_api_access.log
        # custom_index:
        # splunk_index:
        # splunk_source
        # splunk_sourcetype
    configFile: /fluentd/etc/fluent.conf
    aggregators: []
      # - type: "elasticsearch"
      #   host: "elasticsearch-master"
      #   port: "9200"
      # - type: "elasticsearch"
      #   host: "elasticsearch-master"
      #   port: "9200"
      #   scheme: "https"
      #   user: "xxxx"
      #   password: "xxxx"
      # - type: "opensearch"
      #   host: "opensearch-cluster-master"
      #   port: "9200"
      #   user: "admin"
      #   password: "admin"
      # - type: "opensearch"
      #   host: "opensearch-cluster-master"
      #   port: "9200"
      #   scheme: "https"
      #   user: "xxxx"
      #   password: "xxxx"
      # - type: "splunk_hec"
      #   hec_host: "splunk-s1-standalone-service.splunk-operator.svc.cluster.local"
      #   hec_port: "8088"
      #   hec_token: ""
      #   source: ""
      #   sourcetype: "*"
      #   insecure_ssl: "true"
        # hec_index: ""
  livenessProbe:
    initialDelaySeconds: 60
    timeoutSeconds: 5
  readinessProbe:
    initialDelaySeconds: 120
    timeoutSeconds: 5

# Istio specific settings
gateway:
  enabled: false
  hosts:
    - chart-example.local
  http:
    fid:
      name: "http-fid"
      port: 7070
    admin:
      name: "http-admin"
      port: 9100
    api:
      name: "http-api"
      port: 8089
  https:
    fid:
      name: "https-fid"
      port: 7171
    admin:
      name: "https-admin"
      port: 9101
    api:
      name: "https-api"
      port: 8090
  ldap:
    name: "ldap"
    port: 2389
  ldaps:
    name: "ldaps"
    port: 2636

# Cronjob that runs migration export on a schedule
# Uploads the artifact to an s3 bucket

cronjob:
  migration:
    enabled: false
    schedule: "0 0 * * *"
    s3: "s3://fid-exports/cronjob"

## Helm Hooks

hooks:
  hooks_sa:
    enabled: false
  pre_install:
    enabled: false
  post_install:
    enabled: false
  pre_upgrade:
    enabled: false
    s3: "s3://fid-exports/pre_ugrade"
  post_upgrade:
    enabled: false
  pre_rollback:
    enabled: false
  post_rollback:
    enabled: false
  pre_delete:
    enabled: false
  post_delete:
    enabled: false

# Image Credentials
imageCredentials:
  enabled: false
  registry: docker.io
  username:
  password:
  email:

# Dependencies are disabled by default.
dependencies:
  zookeeper:
    enabled: false

# Values file Inputs for the dependency charts.
zookeeper:
  fullnameOverride: zookeeper
  replicaCount: 3
  persistence:
    enabled: false
    storageClass: ""

## Extra environment variables that will be pass onto deployment pods
##
## env:
##   AWS_ROLE_ARN: arn:aws:iam::123456789000:role/iam-role-name-here
##   AWS_WEB_IDENTITY_TOKEN_FILE: /var/run/secrets/eks.amazonaws.com/serviceaccount/token
##   AWS_REGION: us-east-1
env: {}

## "valueFrom" environment variable references that will be added to deployment pods. Name is templated.
## ref: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.19/#envvarsource-v1-core
## Renders in container spec as:
##   env:
##     ...
##     - name: <key>
##       valueFrom:
##         <value rendered as YAML>
envValueFrom: {}
  #  ENV_NAME:
  #    configMapKeyRef:
  #      name: configmap-name
  #      key: value_key

## The name of a secret in the same kubernetes namespace which contain values to be added to the environment
## This can be useful for auth tokens, etc. Value is templated.
envFromSecret: ""

## Sensible environment variables that will be rendered as new secret object
## This can be useful for auth tokens, etc
envRenderSecret: {}

## The names of secrets in the same kubernetes namespace which contain values to be added to the environment
## Each entry should contain a name key, and can optionally specify whether the secret must be defined with an optional key.
## Name is templated.
envFromSecrets: []
## - name: secret-name
##   optional: true

## The names of conifgmaps in the same kubernetes namespace which contain values to be added to the environment
## Each entry should contain a name key, and can optionally specify whether the configmap must be defined with an optional key.
## Name is templated.
## ref: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#configmapenvsource-v1-core
envFromConfigMaps: []
## - name: configmap-name
##   optional: true

## Additional init containers (evaluated as template)
## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
##
extraInitContainers: []

## Volumes that can be used in init containers that will not be mounted to deployment pods
extraContainerVolumes: []
#  - name: volume-from-secret
#    secret:
#      secretName: secret-to-mount
#  - name: empty-dir-volume
#    emptyDir: {}

## @param extraVolumes Optionally specify extra list of additional volumes for the FID pod(s)
## Example Use Case: mount certificates to enable TLS
## e.g:
## extraVolumes:
## - name: fid-keystore
##   secret:
##     defaultMode: 288
##     secretName: fid-keystore
## - name: zookeeper-truststore
##   secret:
##     defaultMode: 288
##     secretName: fid-truststore
##
extraVolumes: []
## @param extraVolumeMounts Optionally specify extra list of additional volumeMounts for the ZooKeeper container(s)
## Example Use Case: mount certificates to enable TLS
## e.g:
## extraVolumeMounts:
## - name: fid-keystore
##   mountPath: /certs/keystore
##   readOnly: true
## - name: fid-truststore
##   mountPath: /certs/truststore
##   readOnly: true
##
extraVolumeMounts: []
## @param sidecars Add additional sidecar containers to the FID pod(s)
## e.g:
## sidecars:
##   - name: your-image-name
##     image: your-image
##     imagePullPolicy: Always
##     ports:
##       - name: portname
##         containerPort: 1234
##
sidecars: []
## @param postInstall Add additional commands to run after install, these commnds will run after first install
## Example:
## postInstall:
##     enabled: true
##     leaderOnly: true
##     script: |
##       # Custom script
##       /opt/radiantone/vds/bin/vdsconfig.sh set-property -name agentsApiServerEndpoint -value "https://example.com/example"
##
postInstall:
  enabled: false
  leaderOnly: true
  script: |
    # Post install custom script
## @param postStart Add additional commands to run after startup, these commnds will run after start up
## Example:
## postStart:
##     enabled: true
##     leaderOnly: true
##     script: |
##       # Custom script
##       /opt/radiantone/vds/bin/runDerbyServer.sh
##
postStart:
  enabled: false
  leaderOnly: true
  script: |
    # Post install custom script
