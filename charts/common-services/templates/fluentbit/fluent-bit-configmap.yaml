apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ (index .Values "fluent-bit" "existingConfigMap") | default "fluent-bit-config" }}
data:
  fluent-bit.conf: |
    [SERVICE]
        Daemon             Off
        Flush              {{ index .Values "fluent-bit" "flush" }}
        Log_Level          {{ index .Values "fluent-bit" "logLevel" }}
        Parsers_File       parsers.conf
        Parsers_File       custom_parsers.conf
        HTTP_Server        On
        HTTP_Listen        0.0.0.0
        HTTP_Port          {{ index .Values "fluent-bit" "metricsPort" }}
        Health_Check       On

    # Input Sections
    {{- range (index .Values "fluent-bit" "logs") }}
      {{- if .enable }}
    [INPUT]
        Name                tail
        Tag                 {{ .name }}.log
        Path                {{ .path }}
        Exclude_Path        /var/log/containers/kube-*,/var/log/containers/*node*,/var/log/containers/*logstash*,/var/log/containers/fluent-bit*,/var/log/containers/aws-node*
        Parser              docker
        DB                  /var/log/flb_kube.db
        Skip_Long_Lines     On
        Refresh_Interval    {{ .refresh_interval }}
      {{- end }}
    {{- end }}

    # Aggregator Sections
    {{- if (index .Values "fluent-bit" "aggregators") }}
      {{- range $aggregator := (index .Values "fluent-bit" "aggregators") }}
    [FILTER]
        Name                {{ $aggregator.type }}
        Match               {{ $aggregator.match }}
        {{- range $key, $value := $aggregator.config }}
        {{ $key }}          {{ $value }}
        {{- end }}
      {{- end }}
    {{- end }}

    # Output Sections
    {{- if (index .Values "fluent-bit" "aggregators") }}
      {{- range $log := (index .Values "fluent-bit" "logs") }}
        {{- if $log.enable }}
          {{- $tag := printf "%s.log" $log.name }}
          {{- range $aggregator := (index .Values "fluent-bit" "aggregators") }}
    [OUTPUT]
        Name                {{ $aggregator.type }}
        Match               {{ $tag }}
        {{- if eq $aggregator.type "es" }}
        # Elasticsearch Output
        Host                {{ $aggregator.host }}
        Port                {{ $aggregator.port | default 9200 }}
        Index               {{ $log.name }}.log
        Logstash_Format     Off
        Trace_Error         On
        Replace_Dots        On
        Retry_Limit         False
        {{- if $aggregator.username }}
        HTTP_User           {{ $aggregator.username }}
        {{- end }}
        {{- if $aggregator.password }}
        HTTP_Passwd         {{ $aggregator.password }}
        {{- end }}
        {{- if $aggregator.tls }}
        tls                 On
        tls.verify          {{ $aggregator.tls_verify | default "On" }}
        {{- else }}
        tls                 Off
        {{- end }}
        {{- else if eq $aggregator.type "opensearch" }}
        # OpenSearch Output
        Host                {{ $aggregator.host }}
        Port                {{ $aggregator.port | default 9200 }}
        Index               {{ $log.name }}.log
        Logstash_Format     Off
        Trace_Error         On
        Replace_Dots        On
        Retry_Limit         False
        {{- if $aggregator.username }}
        HTTP_User           {{ $aggregator.username }}
        {{- end }}
        {{- if $aggregator.password }}
        HTTP_Passwd         {{ $aggregator.password }}
        {{- end }}
        {{- if $aggregator.tls }}
        tls                 On
        tls.verify          {{ $aggregator.tls_verify | default "On" }}
        {{- else }}
        tls                 Off
        {{- end }}
        {{- else if eq $aggregator.type "splunk" }}
        # Splunk Output
        Host                {{ $aggregator.host }}
        Port                {{ $aggregator.port | default 8088 }}
        Splunk_Token        {{ $aggregator.splunk_token }}
        Splunk_Send_Raw     On
        Splunk_Index        {{ $log.name }}.log
        Retry_Limit         False
        {{- if $aggregator.tls }}
        tls                 On
        tls.verify          {{ $aggregator.tls_verify | default "Off" }}
        {{- else }}
        tls                 Off
        {{- end }}
        {{- else }}
        # Other Output
        Name                {{ $aggregator.type }}
        # Additional configuration for other output types can be added here
        {{- end }}
        {{- end }}
        {{- end }}
      {{- end }}
    {{- else }}
      # Default Output if no aggregators are defined
      {{- range (index .Values "fluent-bit" "logs") }}
        {{- if .enable }}
    [OUTPUT]
        Name                {{ index $.Values "fluent-bit" "outputSearchType" }}
        Match               {{ .name }}.log
        Host                {{ index $.Values "fluent-bit" "outputSearchHost" }}
        Port                {{ index $.Values "fluent-bit" "outputSearchPort" | default 9200 }}
        Index               {{ .name }}.log
        Logstash_Format     Off
        Trace_Error         On
        Replace_Dots        On
        Retry_Limit         False
        {{- if (index $.Values "fluent-bit" "outputSearchUsername") }}
        HTTP_User           {{ index $.Values "fluent-bit" "outputSearchUsername" }}
        {{- end }}
        {{- if (index $.Values "fluent-bit" "outputSearchPassword") }}
        HTTP_Passwd         {{ index $.Values "fluent-bit" "outputSearchPassword" }}
        {{- end }}
        {{- if (index $.Values "fluent-bit" "outputSearchTLS") }}
        tls                 On
        tls.verify          {{ index $.Values "fluent-bit" "outputSearchTLSVerify" | default "On" }}
        {{- else }}
        tls                 Off
        {{- end }}
        {{- end }}
      {{- end }}
    {{- end }}

  custom_parsers.conf: |
    [PARSER]
        Name                docker_no_time
        Format              json
        Time_Keep           Off
        Time_Key            time
        Time_Format         %Y-%m-%dT%H:%M:%S.%L
