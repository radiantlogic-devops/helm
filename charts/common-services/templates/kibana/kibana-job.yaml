{{- if eq .Values.kibana.enabled true }}

apiVersion: batch/v1
kind: Job
metadata:
  name: kibana-import
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "5"
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  backoffLimit: 5
  ttlSecondsAfterFinished: 600
  template:
    spec:
      {{- with .Values.kibana.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: OnFailure
      volumes:
      - name: kibana-data
        configMap:
          name: kibana-data
          defaultMode: 0777
      containers:
      - name: kibana-import
        image: alpine:3.14
        imagePullPolicy: IfNotPresent
        env:
        - name: KIBANA_URL
          value: "http://kibana:5601{{ .Values.kibana.healthCheckPath | default "/eoc-backend/kibana" }}"
        {{- $username := "" }}
        {{- $password := "" }}
        {{- range .Values.kibana.extraEnvs }}
        {{- if eq .name "ELASTICSEARCH_USERNAME" }}
        {{- $username = .value }}
        {{- end }}
        {{- if eq .name "ELASTICSEARCH_PASSWORD" }}
        {{- $password = .value }}
        {{- end }}
        {{- end }}
        {{- if and $username $password }}
        - name: ELASTICSEARCH_USERNAME
          value: {{ $username | quote }}
        - name: ELASTICSEARCH_PASSWORD
          value: {{ $password | quote }}
        - name: AUTH_ENABLED
          value: "true"
        {{- else }}
        - name: AUTH_ENABLED
          value: "false"
        {{- end }}
        command: ["/bin/sh", "-c"]
        args:
        - |
          set -e
          apk add --no-cache curl jq

          # Execute scripts
          /kibana/wait-for-kibana.sh
          /kibana/import-index.sh
        volumeMounts:
        - name: kibana-data
          mountPath: /kibana/

{{- end }}
