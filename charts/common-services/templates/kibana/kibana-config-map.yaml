{{- if .Values.kibana.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: kibana-data
data:
  curl-script.sh: |
    #!/bin/sh
    set -e

    MAX_ATTEMPTS=5
    SLEEP_DURATION=5

    import_index() {
        echo "Starting the import of index patterns."
        local file_path="/tmp/index_pattern.ndjson"
        echo "Copying index pattern file to a temporary location to avoid symlink issues."
        cp /kibana/index_pattern.ndjson $file_path

        local import_success="false"
        local attempt=0

        while [ "$import_success" != "true" ] && [ $attempt -lt $MAX_ATTEMPTS ]; do
            attempt=$((attempt + 1))
            echo "Attempt $attempt of $MAX_ATTEMPTS"

            local auth_header=""
            if [ "${AUTH_ENABLED}" = "true" ]; then
                auth_header="Authorization: Basic $(echo -n "${ELASTICSEARCH_USERNAME}:${ELASTICSEARCH_PASSWORD}" | base64)"
            fi

            local response=$(curl -s --location --request POST "${KIBANA_URL}/api/saved_objects/_import?overwrite=true" \
                              --header 'kbn-xsrf: true' \
                              --header "${auth_header}" \
                              --form "file=@$file_path")
            import_success=$(echo "$response" | grep -q '"success":true' && echo "true" || echo "false")

            echo "Response: $response"
            if [ "$import_success" != "true" ]; then
                echo "Error: Failed to import index patterns. Retrying in $SLEEP_DURATION seconds..."
                sleep $SLEEP_DURATION
            fi
        done

        if [ "$import_success" = "true" ]; then
            echo "Successfully imported index patterns."
        else
            echo "Failed to import index patterns after $MAX_ATTEMPTS attempts."
            echo "Details: $response"
            exit 1
        fi
    }

    import_index


  index_pattern.ndjson: |
{{ .Files.Get "dashboards/kibana-index-pattern.ndjson" | indent 4 }}
{{- end }}
